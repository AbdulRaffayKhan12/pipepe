name: Deploy to Apigee

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

permissions:
  id-token: write   # needed for Workload Identity Federation
  contents: read    # needed for actions/checkout

jobs:
  deploy:
    runs-on: windows-latest
    env:
      API_NAME: reverse-pipeline1
      PROXY_NAME: apiproxy
      ORG_CONFIG_PATH: org-config.txt
      ZIP_PATH: ${{ github.workspace }}/Reverse-pipe.zip

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (WIF)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/738158130399/locations/global/workloadIdentityPools/demo2-pool/providers/demo2-github"
          service_account: "raffay-cicd@abacus-apigee-demo2.iam.gserviceaccount.com"
          export_environment_variables: true   # exposes GOOGLE_ACCESS_TOKEN

      - name: Load Org and Env Config
        shell: pwsh
        run: |
          $configText = Get-Content "${{ env.ORG_CONFIG_PATH }}" | ForEach-Object { $_.Trim() }
          $orgLine = $configText | Where-Object { $_ -like 'org=*' }
          $envLine = $configText | Where-Object { $_ -like 'env=*' }
          if (-not $orgLine -or -not $envLine) {
              Write-Error "‚ùå Missing org or env entry in org-config.txt"
              exit 1
          }
          $org = $orgLine -replace '^org=', ''
          $environments = ($envLine -replace '^env=', '').Split(',') | ForEach-Object { $_.Trim() }
          Write-Host "‚úÖ Loaded Org: $org"
          Write-Host "‚úÖ Loaded Environments: $($environments -join ', ')"
          Add-Content -Path $env:GITHUB_ENV -Value "APIGEE_ORG=$org"
          Add-Content -Path $env:GITHUB_ENV -Value "APIGEE_ENVS=$($environments -join ',')"

      - name: Zip Proxy
        shell: pwsh
        run: |
          $zipPath = "${{ env.ZIP_PATH }}"
          if (Test-Path $zipPath) { Remove-Item $zipPath }
          Push-Location ${{ github.workspace }}
          tar -a -c -f $zipPath apiproxy
          Pop-Location
          Write-Host "‚úÖ Proxy zipped at $zipPath"

      - name: Import Apigee Proxy
        shell: pwsh
        run: |
          $org = $Env:APIGEE_ORG
          $zipFile = $Env:ZIP_PATH
          $token = $Env:GOOGLE_ACCESS_TOKEN
          $importResponseFile = "${{ github.workspace }}\import_response.json"
          Invoke-WebRequest -Uri "https://apigee.googleapis.com/v1/organizations/$org/apis?action=import&name=$($Env:API_NAME)" `
            -Method POST -InFile $zipFile -Headers @{ Authorization = "Bearer $token"; "Content-Type"="application/octet-stream" } `
            -OutFile $importResponseFile
          $revision = (Get-Content $importResponseFile | ConvertFrom-Json).revision
          Write-Host "‚úÖ Imported Proxy Revision: $revision"
          Add-Content -Path $env:GITHUB_ENV -Value "APIGEE_REVISION=$revision"

      - name: Deploy Apigee Proxy
        shell: pwsh
        run: |
          $org = $Env:APIGEE_ORG
          $revision = $Env:APIGEE_REVISION
          $token = $Env:GOOGLE_ACCESS_TOKEN
          $envList = $Env:APIGEE_ENVS.Split(',')
          foreach ($envName in $envList) {
              Write-Host "üöÄ Deploying $($Env:API_NAME) revision $revision to environment $envName"
              Invoke-WebRequest -Uri "https://apigee.googleapis.com/v1/organizations/$org/environments/$envName/apis/$($Env:API_NAME)/revisions/$revision/deployments?override=true" `
                -Method POST -Headers @{ Authorization = "Bearer $token" }
              Write-Host "‚úÖ Deployment to $envName completed"
          }
