name: Deploy Apigee Proxy

on:
  push:
    branches:
      - '**'  # run on all branches
  workflow_dispatch:

jobs:
  deploy:
    runs-on: windows-latest

    env:
      ORG_CONFIG_PATH: org-config.txt
      API_NAME: reverse-pipeline1
      PROXY_NAME: Reverse-pipe
      ZIP_DIR: Reverse-pipe
      ZIP_PATH: ${{ github.workspace }}/Reverse-pipe.zip
      APIGEE_ORG: ''
      APIGEE_ENV: ''
      REVISION: ''

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: your-gcp-project-id
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Load Org and Env Config
        shell: pwsh
        run: |
          $configText = Get-Content "${{ env.ORG_CONFIG_PATH }}" | ForEach-Object { $_.Trim() }
          $orgLine = $configText | Where-Object { $_ -like 'org=*' }
          $envLine = $configText | Where-Object { $_ -like 'env=*' }

          if (-not $orgLine -or -not $envLine) {
              Write-Error "Missing org or env entry in org-config.txt"
              exit 1
          }

          $env:APIGEE_ORG = $orgLine -replace '^org=', ''
          $env:APIGEE_ENV = ($envLine -replace '^env=', '').Split(',')[0].Trim()  # pick first environment

          Write-Host "âœ… Loaded Org: $env:APIGEE_ORG"
          Write-Host "âœ… Loaded Environment: $env:APIGEE_ENV"

      - name: Create Proxy Zip
        shell: pwsh
        run: |
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          if (Test-Path "${{ env.ZIP_PATH }}") {
              Remove-Item -Path "${{ env.ZIP_PATH }}" -Force
          }
          [System.IO.Compression.ZipFile]::CreateFromDirectory("${{ github.workspace }}/${{ env.ZIP_DIR }}", "${{ env.ZIP_PATH }}")

      - name: Authenticate gcloud and Get Token
        shell: pwsh
        run: |
          $token = gcloud auth print-access-token
          $env:APIGEE_TOKEN = $token
          Write-Host "âœ… Access Token Retrieved"

      - name: Import Apigee Proxy
        shell: pwsh
        run: |
          curl.exe --location --request POST `
            "https://apigee.googleapis.com/v1/organizations/$env:APIGEE_ORG/apis?action=import&name=$env:API_NAME" `
            --header "Authorization: Bearer $env:APIGEE_TOKEN" `
            --header "Content-Type: application/octet-stream" `
            --data-binary "@${{ env.ZIP_PATH }}" `
            -o import_response.json

          $env:REVISION = (Get-Content import_response.json | ConvertFrom-Json).revision
          Write-Host "âœ… Imported Proxy Revision: $env:REVISION"

      - name: Deploy Apigee Proxy
        shell: pwsh
        run: |
          Write-Host "ðŸš€ Deploying $env:API_NAME revision $env:REVISION to environment $env:APIGEE_ENV"

          curl.exe --location --request POST `
            "https://apigee.googleapis.com/v1/organizations/$env:APIGEE_ORG/environments/$env:APIGEE_ENV/apis/$env:API_NAME/revisions/$env:REVISION/deployments?override=true" `
            --header "Authorization: Bearer $env:APIGEE_TOKEN" `
            --header "Content-Type: application/json" `
            --data "{}"

