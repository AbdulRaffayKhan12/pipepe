name: Deploy to Apigee

on:
  push:
    branches:
      - "**"

jobs:
  deploy:
    runs-on: windows-latest
    env:
      API_NAME: reverse-pipeline1
      PROXY_NAME: Reverse-pipe
      GIT_REPO_URL: https://github.com/AbdulRaffayKhan12/pipepe.git
      ORG_CONFIG_PATH: org-config.txt
      ZIP_PATH: ${{ github.workspace }}/Reverse-pipe.zip
      APIGEE_ORG: abacus-apigee-demo2

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Authenticate with Google Cloud using service account key
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      # Install gcloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # Load org and env configs from org-config.txt
      - name: Load Org and Env Config
        shell: pwsh
        run: |
          $configText = Get-Content "${{ env.ORG_CONFIG_PATH }}" | ForEach-Object { $_.Trim() }
          $orgLine = $configText | Where-Object { $_ -like 'org=*' }
          $envLine = $configText | Where-Object { $_ -like 'env=*' }

          if (-not $orgLine -or -not $envLine) {
            Write-Error "‚ùå Missing org or env entry in org-config.txt"
            exit 1
          }

          $org = $orgLine -replace '^org=', ''
          $envs = ($envLine -replace '^env=', '').Split(',') | ForEach-Object { $_ -replace '\s','' }

          Write-Host "‚úÖ Loaded Org: $org"
          Write-Host "‚úÖ Loaded Environments: $envs"

          echo "APIGEE_ORG=$org" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "APIGEE_ENV=$($envs[0])" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Get access token
      - name: Get Access Token
        shell: pwsh
        run: |
          $token = gcloud auth print-access-token
          if (-not $token) {
            Write-Error "‚ùå Failed to get access token"
            exit 1
          }
          echo "APIGEE_TOKEN=$token" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "‚úÖ Access Token Retrieved"

     # üîë Import Proxy into Apigee
      - name: Import Proxy
        run: |
          curl.exe --location "https://apigee.googleapis.com/v1/organizations/${{ env.APIGEE_ORG }}/apis?action=import&name=${{ env.API_NAME }}" `
            --header "Authorization: Bearer $env:APIGEE_TOKEN" `
            --header "Content-Type: application/octet-stream" `
            --data-binary "@${{ env.ZIP_PATH }}" -o import_response.json

          $revision = (Get-Content import_response.json | ConvertFrom-Json).revision
          if (-not $revision) {
              Write-Error "‚ùå Failed to import proxy"
              Get-Content import_response.json
              exit 1
          }
          echo "REVISION=$revision" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "‚úÖ Imported Proxy Revision: $revision"
        shell: pwsh

      # Deploy Apigee Proxy
      - name: Deploy Apigee Proxy
        shell: pwsh
        run: |
          Write-Host "üöÄ Deploying $env:API_NAME revision $env:REVISION to environment $env:APIGEE_ENV"

          curl.exe --silent --show-error --fail `
            --location --request POST "https://apigee.googleapis.com/v1/organizations/$env:APIGEE_ORG/environments/$env:APIGEE_ENV/apis/$env:API_NAME/revisions/$env:REVISION/deployments?override=true" `
            --header "Authorization: Bearer $env:APIGEE_TOKEN" `
            --header "Content-Type: application/json"

          Write-Host "‚úÖ Deployment Completed"
